parameters:
- name: ShouldSkipOptimize

steps:
- task: ComponentGovernanceComponentDetection@0
  displayName: üîç Component Detection

- task: notice@0
  displayName: üõ†Ô∏è Generate NOTICE file
  inputs:
    outputfile: $(System.DefaultWorkingDirectory)/obj/NOTICE
    outputformat: text
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  retryCountOnTaskFailure: 3 # fails when the cloud service is overloaded

- task: MicroBuildOptProfPlugin@6
  inputs:
    ProfilingInputsDropName: ProfilingInputs/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)
    OptimizationInputsLookupMethod: DropPrefix
    DropNamePrefix: OptimizationInputs/$(System.TeamProject)/$(Build.Repository.Name)
    ShouldSkipOptimize: ${{ parameters.ShouldSkipOptimize }}
    AccessToken: $(System.AccessToken)
  displayName: üîß Install OptProf Plugin
